<INDIVIDUAL>
<ID>subject5759</ID>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-09-19 18:01:03 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Why do people put these in youtube videos instead of a blog post? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-09-09 14:06:14 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> All of version 2.0. Which seems like it will live until laravel 6 </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-09-09 12:26:32 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Just purchased! Thanks for the heads up. Not ready for it either but thought I might as well grab it now </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-09-08 17:59:28 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Agreed and I don't think Fabric are endorsing such campaigns either. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-09-08 10:44:11 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Your unit tests probably shouldn't be hitting a full page cache </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-09-03 16:35:46 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> shitters full </TEXT>
</WRITING>
<WRITING>
	<TITLE> As a Kiwi living in the UK. I've been craving a Mince n Cheese pie for awhile. I Finally caved and made some! [oC] </TITLE>
	<DATE> 2016-08-31 19:47:59 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-08-31 19:42:19 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Because of the ground, mostly. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-08-30 21:45:33 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> That's not what public domain means. You're looking for 'expectation of privacy'. 

However you have no idea why that guy was there or what he's got going for him / against him. To go and front page his face on the internet is a dick move regardless of the legality. It's about decency.

 </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-08-22 14:24:12 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> What! What about that thing of planting a pineapple in a pot underground and it growing another pineapple? WTF HAVE I BEEN LIED TO!?!?!

DO I HAVE A USELESS HALF PINEAPPLE BURIED IN A POTPLANT FOR NOTHING? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-08-22 13:15:59 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> If you knew about it, why didn't you tell them!? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-08-16 13:51:17 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Take a look at this diagram, I think you've got the wrong idea of those envelopes.

http://lindbymusic.com/wp-content/uploads/2016/07/ADSR-1024x511.jpg

Those knobs simply create envelopes on the sample. The points at which they trigger is down to your midi input (pressing and releasing a key on a keyboard) and their beginning values are the knob setting and end values the start of the next knob.

 </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-08-13 11:28:52 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Can Xamarin deliver crisp apps cross platform? I've not seen lots about it but I'm really keen  on something like this as I've been using Unity3d a lot for work in the past few years and it's cross platform does feel pretty nice. Been looking for a less game focused c# tool for other apps. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-08-09 16:56:16 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Please don't take political advice from Australia.. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-08-09 10:15:35 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Ha he brought it up when we pulled up next to a prius at the lights... totally caught us off guard.. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-08-08 17:52:48 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I have over 200 uber rides in 18 months so feels pretty justified on weighing in here..

1. Never had an issue with an Uber driver having bad English. Especially not enough that it's made the journey difficult.

2. This destroys the 'part time uber driver' career for people who study, work seasonally or need to make ends meet for a few months. 

3. Fuck off TFL


When I hop into an Uber, I already know far more about the driver than any black cab, and Uber do plenty of background checks as well as GPS track the trip, fare etc. I had to catch a black cab last week and he was openly racist, swore and told me to 'fuck off' when I asked him why he thought 'all uber drivers are refugees' as he put it.
 </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-08-06 12:58:49 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> that's the scam exactly :) </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-08-06 00:41:55 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> quite common way to distract people while pickpocketing them is to spill something on the person. Vomiting seems like a variation of that strategy </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-07-25 12:00:00 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Nah fam! Elephant is great. I used to live in the building next to strata and it was a right laugh. Characters about for sure.

Don't go wandering around side streets at night. But that's true anywhere SE imo ;) </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-07-22 13:56:20 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> laeve ihm alnone </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-07-19 22:34:07 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Well was this plane safe? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-07-15 20:02:33 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> that link opening on the empty chair on street view pulled the heart strings a bit :'( </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-07-15 14:16:42 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> what do the weights and heights mean? faster dodge, higher hp? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-07-15 13:42:38 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Their example could be made in 30 minutes. Plenty of full featured cloud IDE's

https://www.google.co.uk/?gws_rd=ssl#q=cloud+PHP+ide </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-07-14 20:37:40 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> This guy is a legend and well respected in his region of Spain, he'll get his wish and more. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-07-13 18:05:37 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  What is PHPixie?

A framework created by a liar?

Also the OP here is OBVIOUSLY a /u/dracony alt. 1 Month old, only posts about phpixie, every  other post is filler to get around automod. This guy is a fucking joke. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-07-08 19:57:04 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> In this situation you'd need to have a 'blacklist' of usernames as part of your request validation. 

I would encourage more specific routes though, personally i would use the below routes that are more specific for what is actually being 'managed': all users, specific user, etc

/users/manage

/user/{username}/manage

/user/{username} </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-07-07 15:07:38 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Have you created a new apple ID to download this form the USA store? Can't find it in UK app store :( </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-07-06 14:42:05 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> You should declare all of your 'static routes' before you declare routes that have variables in them. As long as /users/manage is before /users/{username} (and nobody has the username 'manage') you'll be fine :) </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-07-04 02:20:29 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Some places are ridiculously loud but I've found that everywhere. Still good clubs out there for the DnB sound. Fire club in Vauxhall handles it all well with the Viper recordings boys and tobacco docks holds a good system also. The record label gigs are common enough and always come with good sound. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-07-04 01:40:01 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Hey man, tune is in D#. Cheers for the words about the bass. Originally it was coming in almost bang on 30-40hz which is that low end sweet spot for club systems but I did a session using iphone headphones one night and came out with the highs boosted and resampled to that squelch you hear in the final mix. Big fan of the low end though and a lot of inspiration when making basses recently (maybe not so much this track) is that Alix Perez 1984 album. 

30hz for life. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-07-01 20:54:50 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> It's visual scripting, little bit like playmaker for Unity. As a programmer myself it always confused me a bit but it's awesome to see a game using it and performing really well. Easy greenlight here! </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-24 12:48:29 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Serum, of course :p

I've worked a lot on making sets of 20hz - 40hz basses this last year. Serum seriously PUMPS out frequencies at that range and I tend to use a bucket of EQs to shape and cut a nice sub bass sound from that. 

On top of that I boost the harmonics to bring out the sound on systems that don't render sub 40hz very well. Seems to translate that neuro sound well across different systems.

Cheers! </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-24 12:08:42 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> FIG has already solved the problems it was needed for, now it's falling into bureaucratic arguments about topics most of us commercial developers don't care about. All this drama between FIG in the last few months is a joke. Lying members, childish arguments, pedantic bullshit.

Take the autoloader and run imo </TEXT>
</WRITING>
<WRITING>
	<TITLE> Brand new for your Friday. My new track feat. The Ragga Twins hot out of East London! | Francois Bass   Ragga Twins - Barrier </TITLE>
	<DATE> 2016-06-24 11:34:46 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE> My new track with MC crew from London The Ragga Twins | Francois Bass   Ragga Twins - Barrier </TITLE>
	<DATE> 2016-06-24 11:33:56 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-22 12:04:50 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Sorry but this isn't related to Laravel so I've removed it. We love other Frameworks and this looks really cool but it belongs in the /r/php subreddit :) </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-22 11:32:18 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> If it's saved in autofull you can right click the password box and select 'inspect' and change where it says 'type="password"' to 'type="text"' </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-22 10:50:29 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> We've just finished migrating all our clients to PHP 7 and mysql 5.6. Couldn't be happier. Some apps are reporting speed increases of 200%! </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-22 10:40:37 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Yeah I think that's true for most stadiums. However I don't think they exactly run at a loss. Not to mention the money brought into the local area by 30,000~ people there for the day. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-22 09:42:02 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> They build huge stadiums in central city locations specifically for it...so yeah I think there's a few bucks to be made. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-21 16:34:07 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Some would be ephemeral such as a "Like" notification, but others would need to exist forever, such as notifications todo with a "Timeline" - e.g. 'John upload file.docx on 12th Sept' </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-21 15:18:27 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Everything would definitely be INT/BIGINT indexed and it would be rare to query these tables by anything other than their index (as they will almost always be a sub relation from another model).

Thanks for putting my mind at ease :) </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-21 14:28:40 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> So really, if we're ever getting close to the "Limit" we can probably afford the infrastructure behind solving that problem with shards. Great news!

In terms of performance, what kind of slowdown would we be looking at once these tables are sitting in the hundreds of millions? Again am I worrying about nothing here? </TEXT>
</WRITING>
<WRITING>
	<TITLE> Multi-tenant SaaS app. Questions about massive tables and scaling </TITLE>
	<DATE> 2016-06-21 13:22:44 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Heyo!


I'm at the beginning stages of planning a SaaS application. The multi-tenant setup of things hasn't been a problem and I've got everything scoped well where needed.


However, there's some tables in this application which I can quickly see hitting millions of rows. The main one being the 'Notification' table which would store something like:


-id (int)

-to (int)

-from (int)

-notification_id (int)

-extra (json as TEXT)


I don't want to clear out these notifications periodically, as I want full history of notifications and some parts of the application would require it.


My question is, will this table, at millions of rows become an issue? Am I missing something vital that other big SaaS applications do to prevent such situations? The other table in question would be the 'Messages' table, which would store all the chat messages, which would also need to be historic.


Am I worrying about nothing here? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-21 12:23:02 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> NaN! </TEXT>
</WRITING>
<WRITING>
	<TITLE> What Disneyland looked during it's opening week in 1955 </TITLE>
	<DATE> 2016-06-17 17:24:27 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-17 17:00:38 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Forgetting the cache when an update is made that will effect it, like adding a new user of which a user list is cached - definitely a good idea. We usually have _entity_Changed events which will forget cache when any update is made within that model - works pretty well and means we can 'set and forget' it when introducing new features. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-17 14:59:28 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> They were still fake usage stats mate. Just because it didn't become painfully obvious til there was a huge amount of it doesn't change anything. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-17 14:46:56 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> So you do think we're all stupid then. As it's plain as day you are the one who faked the git stars and you're the dev in the google group who came to 'apologize' for gaming the stars for his boss. Sure it's not 100% confirmed, because that would require you to actually admit your wrong doing. Which is obviously never going to happen.

It seems to be a wide belief that the situation of some lone developer faking the stars to use it on a project is so far fetched compared to the idea of the projects creator (you) boosting his own stats for his own gain and ultimate boasting to phpfig. I think your excuse for a story hinges on more doubt than the communities conclusion of it all being your own doing.

You're right, we don't have to resurrect the issue again. Anyone with half a brain can see what happened there. But it's not going to stop me not recommending the use of phpixie, however subtly. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-17 14:19:58 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> If I found out a restaurant I was planning to check out had been lying about reviews and customers I probably wouldn't want to go there anymore. Same kind of thing here. Why should we trust your framework when you've proven multiple times we can't trust you? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-17 14:00:38 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Lol oh hi! No bandwagon here I'm afraid.  I witnessed myself your attempts to game systems (github stars), lies to get accepted to FIG (usage stats   stars) and your out of this world hilarious attempt to cover it all up on the google group with more and more lies (pretending to be a dev who gamed the star system to get his boss to OK the use of phpixie, which would make him one of only a few devs using your framework in the world..) I'm sure your framework is more than ok, and could contend with any other framework, but the downfall is the face of it is now known as a liar and what's more, a liar who doesn't know when he's caught. Do you think developers are stupid?  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-17 11:38:23 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Symfony - An Open Source Framework With Many Benefits 

Laravel - An Open Source Framework With Many Benefits 

Codeigniter - An Open Source Framework With Many Benefits 

PHPixe - An Open Source Framework With No Benefits 

Yii - An Open Source Framework With Many Benefits 


 </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-16 10:19:36 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> More excuses for bad products, unhappy deliveries and lost pitches. Great products can be written in any language. Stop making excuses to why your products are shit. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-15 15:34:40 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> This is a frontend issue and is not related to PHP. Please post this over to /r/webdev

/s </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-15 12:58:38 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  Npm is just not meant for client side dependencies.

Yes it is..?

 Bower is the right tool for the job

There's nothing bower does that npm doesn't here. Especially when tied up using Elixer / Gulp

You can add whatever processes you want to your gulp tasks, webpack, browserify, whatever you want. That has nothing to do with using bower or npm.
 </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-13 16:13:07 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> You could abstract a system that gets called after artisan migrate, however there's nothing wrong with having that inside the relevant migration file itself with a nice down() addition. It's what we do here </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-10 15:57:00 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> When we want to move our clients to it, we'll still need an external repo regardless of being on 14 or 16. Unless there's plans I'm unaware of for keeping ubu 16 provided packages up to date? Would be a big deal for some of our clients for sure. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-10 15:11:01 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> black pudding man! </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-10 15:08:17 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I've done this for 48 odd hours instead of my usual 12 and the chops turned out a bit 'slimey' if that makes sense. It could've been something different in my prep I'm not sure but I stick to an overnight in the fridge these days :p </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-10 14:58:25 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> PHP7 being a ubu provided package isn't really a reason to upgrade, as the standard packages are not updated often 
enough, especially for something like php7 which is going through a series 'tie up' patches, like we see with 7.1 coming out today. If I were to upgrade us to 16 LTS, I'd still be using the same package repo (ondrej) within a few months anyway so don't see a good reason to move. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-09 19:57:36 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  Almost Studio Acapella

Not really, but a good share none the less :) </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-09 18:24:25 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> you need an areas_affected table with update_id and area_id. At the moment you're trying to make a 1-M relationship using 1-1 methods and json, possible using mysql's new JSON query, but still not recommended. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-09 16:45:53 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> It's part of the Illuminate/Routing Facade 'Route'. Which is why it's registered in my above example using $this. Check out the file here if you like - https://github.com/laravel/framework/blob/5.2/src/Illuminate/Routing/Router.php

There's very little magic going on there, it's just a function that registers a bunch of routes. If you removed the Route::Auth() and used the above routes replacing $this- with Route:: it would be registered and behave in the exact same way </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-09 14:30:12 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> The Route::Auth() is just an alias within the auth provider which is actually just these routes.

    // Authentication Routes...
    $this-get('login', 'Auth\AuthController@showLoginForm');
    $this-post('login', 'Auth\AuthController@login');
    $this-get('logout', 'Auth\AuthController@logout');

    // Registration Routes...
    $this-get('register', 'Auth\AuthController@showRegistrationForm');
    $this-post('register', 'Auth\AuthController@register');

    // Password Reset Routes...
    $this-get('password/reset/{token?}', 'Auth\PasswordController@showResetForm');
    $this-post('password/email', 'Auth\PasswordController@sendResetLinkEmail');
    $this-post('password/reset', 'Auth\PasswordController@reset');

You can even remove the Route::Auth() and use the above routes (which is what I do after a make:auth) to keep things verbose

 </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-06-09 10:07:07 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> We're slowly getting setup a new directory for markets in london. At the moment we've probably only got markets you already know about but worth keeping an eye on as we get around london cataloguing more markets :) Are next focus is all the farmers / flea markets in zone 1   2. http://marketsinlondon.co.uk/ </TEXT>
</WRITING>
<WRITING>
	<TITLE> Spitalfields Market | Markets in London </TITLE>
	<DATE> 2016-06-07 20:39:11 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE> Columbia Road Flower Market | Markets in London </TITLE>
	<DATE> 2016-06-07 20:39:04 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE> Camden Market | Markets in London </TITLE>
	<DATE> 2016-06-07 20:38:38 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE> Borough Market | Markets in London </TITLE>
	<DATE> 2016-06-07 20:38:24 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE> Brick Lane | Markets in London </TITLE>
	<DATE> 2016-06-07 20:37:58 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-28 11:20:11 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> But because their family hold diplomatic status because of his wife's job, he's (thankfully?) not North Korean despite being born there. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-27 18:18:50 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Absolutely this. Only ever solve problems you have. 

You can cache all your big m-m queries (like a list of all a users items) and regenerate the cache when there's an update (editing an item, adding an item etc). Caching a full Collection of a users objects is amazing as you can query it using all the cool collection filters. That would be good enough til you've got millions of users. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-27 13:42:22 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I've dealt with this quite a lot on large load projects and there's a few red herrings.

Pushing all your display and format code to the front end for processing seems like a great idea to take load off the server, and it will do that a lot. However you lose the ability to nicely cache these views, meaning that people have to 'rebuild' them upon each request. 

Sure the browser caches the images, fonts, css but it doesn't cache the result of the javascript layout controllers etc. Obviously there's ways to generate this compiled view on the web server and serve that but we're talking about making an existing site perform, so forget that for now. 

Another issue (especially if your site is as big as would require heavy optimisation) here is people access your services on a variety of devices and not all of them would be reliable, there's definitely a lot of device bugs to solve when passing much responsibility to the users browser in my experience, which will only add to the refactor time.

The greatest thing your webserver can do for performance is cache. It's minimal effort when compared to rebuilding to use a JS layout system or the like. You want:

- Database query caching (Redis)
- Front end static caching (Varnish)
- Background jobs to rebuild the generic caches (SELECT without WHERE)

With those you can get a lot of your pages (and more importantly all the types of pages we want google to rank) loading in microseconds.

With this you can even split it further and use different servers for your different caches! BLAZING SPEED! We can then get into slave web servers that can automatically scale without invalidating caches etc. dreamboat! </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-23 16:51:03 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Not if you've got multiple contactless cards in your wallet. Saves you removing the one you want. Tapping phone is quick   easy </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-22 12:54:50 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> This is at the end of a festival - it's cleaned up by people with far less alcohol in their system once these guys are gone. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-20 23:09:15 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> can confirm this, amex are a customer service dreamboat. But jesus christ you better pay that bill every month else that same effeciency turns on you. Worth the membership fee for the airport lounges alone imo </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-19 17:26:59 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> You definitely don't need a sub with HS7's - they're absolutely beautiful (and extremely fair) without it. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-18 17:09:03 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> This is something I've never considered when reading all those core library hate rants. It actually makes sense as you've described it. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-18 13:35:24 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> what version of PHP did you install? You may find php-fpm is named with the version, e.g. php7.0-fpm, php5.6-fpm etc </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-18 11:39:33 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> That hasn't changed it's just also now full of soulless suits riding push scooters into the city. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-18 10:42:02 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> umm, you wouldn't recognize it these days compared to 5 years ago. It's already being re-done and it's full of bullshit 'luxary' flats. At least old elephant had character. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-17 18:23:03 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Ever been lashed? I'll take jail... </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-17 14:18:57 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> It was written in PHP 5.2 WTF is a PSR? ;) </TEXT>
</WRITING>
<WRITING>
	<TITLE> Collection of Dogs on Acid Q A threads from the last 10 years. Some really big producers answering questions back in the day. (CrossPost from /r/dnbproduction) </TITLE>
	<DATE> 2016-05-17 13:59:36 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-17 13:58:50 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Here yar as promised - https://www.reddit.com/r/dnbproduction/comments/4jqisd/collection_of_dogs_on_acid_qa_threads_from_the/ </TEXT>
</WRITING>
<WRITING>
	<TITLE> Collection of Dogs on Acid Q A threads from the last 10 years. Some really big producers answering questions back in the day. </TITLE>
	<DATE> 2016-05-17 13:57:52 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I promised in another thread today I'd collect a bunch of these DoA Q A sessions and post them here. A lot of these are almost 10 years old and not only hold great advice, but is really motivating to see producers we idolize these days both asking and answering Q's.

NOISIA - 2005 - http://www.dogsonacid.com/threads/q-a-session-1-noisia-aka-drifter.298904/


Dom   Roland - 2007 - http://www.dogsonacid.com/threads/q-a-session-13-dom-roland.469192/


TeeBee - 2009 - http://www.dogsonacid.com/threads/q-a-session-22-teebee.623161/


Phace - 2009 - http://www.dogsonacid.com/threads/q-a-session-23-phace-misanthrop.625451/


Nu:Tone - 2007 - http://www.dogsonacid.com/threads/q-a-session-16-nu-tone.540472/



Alix Perez - 2009 - http://www.dogsonacid.com/threads/q-a-session-21-alix-perez-sabre.609666/



Black Sun Empire - 2005 - http://www.dogsonacid.com/threads/q-a-session-4-black-sun-empire.323714/



Danny Byrd   Utah Jazz - 2009 - http://www.dogsonacid.com/threads/q-a-session-17-danny-byrd-utah-jazz.569689/


Breakage - 2006 - http://www.dogsonacid.com/threads/q-a-session-11-breakage.430129/

DJ Fresh (Bad Company) - 2009 - http://www.dogsonacid.com/threads/q-a-session-25-fresh.642650/


Fracture   Neptune - 2005 -http://www.dogsonacid.com/threads/q-a-session-6-fracture-neptune.343262/


Cause 4 Concern - 2008 - http://www.dogsonacid.com/threads/q-a-session-19-cause-4-concern.602422/


SkyNet - 2008 - http://www.dogsonacid.com/threads/q-a-session-20-skynet.606556/



JuJu - 2005 - http://www.dogsonacid.com/threads/q-a-session-5-juju.333140/


Hope you guys fund these interesting, as I said, some really solid advice on here. Enjoy!


 </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-17 13:51:01 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> There's a bunch of now old Q A from people like Fred V, Nu:Tone, Break, etc dotted around there. I'll dig them up over lunch </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-17 13:24:59 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Mate, DoA is full of now famous UK producers asking for help etc - you may have seen a screenshot from a forum with Nosia asking 'What's a reece?' - that's DoA.

Originally the forum was setup by DJ Fresh (Bad Company at the time) so it's full of known names. He continues to run it, see the years plans here -http://www.dogsonacid.com/BCUK/

I'll see what I can find </TEXT>
</WRITING>
<WRITING>
	<TITLE> B-Complex posting 'Beautiful Lies' to DoA forum in 2009 hoping to get signed - NEVER GIVE UP! </TITLE>
	<DATE> 2016-05-17 12:05:34 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE> Setting up our own internal git server. Any advice? </TITLE>
	<DATE> 2016-05-12 13:24:08 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Hey all, while we will be sticking with bitbucket for a lot of our work I'm looking to get an internal git server running to fill with all our small projects, packages, etc.

I can install git-core and get things running there with a user etc, but what I'm really after is a nice management panel that will give us some ease of use (especially for the jnr members) for browsing repos, commits, etc.

I've found http://www.gitphp.org/ but it's far from pretty. Looks to offer the features we're after though.

Does anyone have any suggestions for an internal git web interface?

Cheers! </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-10 14:20:10 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> There's no secret. Good, clean sample selection to start with.

You've answered it in your title though, layers + attention to detail = detailed layers.

As for advice, heavily EQ cut your samples so they're only delivering the (often small band of) frequencies that come through when they're all played in unison. Anything else is mud and will leave your layer sounding quite messy. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-04 10:39:18 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> this is a scam. It goes like this.

Yes the room is free, yeah I know it's a great opportunity. Listen we've had lots of interest and you seem really cool. The rent is free but we need a deposit because there's lots of expensive stuff like our 5d TV and our 52 head shower. If you can give us the 1500 deposit you can move in for free next weekend!

...Nobody knows them on facebook, anyone who says they know the guys or whatever are lying. It's a fucking scam. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-03 15:52:50 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> that's fine, but under NO CIRCUMSTANCES give them money before you have a rental agreement or similar!!! </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-03 13:48:16 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> If you can turn them into loops, or even 1:30 pieces you can sell them as TV / film stock. Can make a few bucks on places like audiojungle.net </TEXT>
</WRITING>
<WRITING>
	<TITLE> Ed Edd N Eddy Behind the scenes documentary from 2005 </TITLE>
	<DATE> 2016-05-03 00:24:58 </DATE>
	<INFO> reddit post </INFO>
	<TEXT>  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-05-01 16:59:48 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> This isn't a thing anymore because for most games it's wayyyy too much to render 4 instances of the world, players etc. Games for consoles always push the hardware to the limit and there's just no room for multiple instances at any kind of framerate </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-29 17:57:18 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> A very good point, absolutely true. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-29 17:21:18 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> From what I took form the article, they're not doing this so much to deter poachers or reduce ivory demand. They're doing this because not destroying it bundled with corruption in the region means that a lot of confiscated ivory still ends up being sold. </TEXT>
</WRITING>
<WRITING>
	<TITLE> Any multiplayer, real money craps online? </TITLE>
	<DATE> 2016-04-28 22:39:27 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I'm having a really hard time finding anywhere that offers a proper multiplayer craps game. Does anyone have any recommendations? If there's none, any solo craps recommendations?

Thanks! Roll straight! </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-27 12:43:06 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> So there's a function which records a goal scored (maybe from an api?). Why not attach an event to that function to trigger the push job? Seems like there would be a noticeable difference for a cron every 20 seconds and something that pushes as soon as your DB update. Especially if people are watching said sport while watching their phone. I'd try find a way to trigger it right away </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-27 12:05:17 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> I actually have no solid answer, but from what I've heard the passcode encrypts / decrypts the actual encryption key, so an update to the passcode decrypts the key, then re-encrypts. Meaning the whole phones encryption doesn't change, just the encrypted encryption key. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-26 14:47:37 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Both great areas for a charity shop wander. Enjoy :) </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-26 14:34:29 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> really? They're everywhere! Almost every high street has a couple!!

https://www.google.co.uk/search?q=charity+shops+in+london ie=utf-8 oe=utf-8 gws_rd=cr ei=O2AfV4aOHdWogAaNo57AAQ </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-25 15:14:48 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> he interviews them quite regularly so they know each other, just some fun banter. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-21 18:10:40 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Why does it matter if she's blind? Take her to weatherspoons and tell her it's the ritz!

EDIT: Oh right, blind date...I'm an idiot... </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-20 14:24:36 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> You're going to find a fuckload of other costs apart from the charter cost with a private jet 5000 for 9 people sounds extremely cheap.. are you sure you're paying departure/landing/customs/airport taxes within that? Those can run another 5k sometimes..

 Absolutely not worth your while. If you want to fly, fly first class @ 650 a ticket, but I'd suggest a posh AF eurostar ticket and use the rest of the cash in Paris bringing us back frois gras. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-20 13:03:41 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> c'est bon :) </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-20 12:02:27 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> ahh stupid me! How's the weather on the isle of wight today? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-20 11:48:07 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Where in Ireland are you? ;) </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-15 12:46:23 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Foie gras.... please.... feed me </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-12 23:25:23 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> just stay in bed... </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-12 18:26:34 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> buy farmed fish? </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-11 18:20:44 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> 50 pcm
Free 6s+
Unlimited Data
Unlimited SMS
2000 Minutes

Happy enough :) </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-08 12:12:24 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> This is already the case as browsers cache assets like this. If you're using a popular CDN many visitors will have your libraries already cached and ready to go. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-07 21:47:56 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> My thoughts too. I don't have to deal with this at my current job luckily but I've had spam situations in the past that the client was adamant about some complex solution. Almost always we ended up on some sort of captcha after the bots beat our 'flavor of the month' antispam.

Recapcha, at least in our A/B tests had a better conversion rate and our strategists at the time contributed it to the fact that people were already familiar with recpacha. They knew as soon as they saw it that it was an easy thing to solve / click. A capcha process someone has never seen before (not matter how simple it actually is) is always going to lose out to the a familiar path.

As for protection outside of captcha, we never found anything long term that worked. Plenty of false solutions though! Bot programmers know their stuff! </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-07 18:07:45 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Is there any reason you're opposed to recaptcha? I say this because you mention a concern about adding another step to submitting the form. Recaptcha works pretty well for this by (most of the time) just having users check a box, a whole lot better than some obscured numbers or words of more conventional captcha systems. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-07 14:40:00 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> The issue you may find with shared hosts like godaddy or hostgator (apart from their often outdated versions of things) is they don't give you enough RAM to run composer heavily. While it may not corp up an an issue during the first composer install after you get a few tasks on your update method it can quickly fall apart. Being shared hosting, you also cannot setup a swapfile.

I'm a huge advocate of DigitalOcean, even if you're not familiar with managing a server there's plenty of tutorials aimed specifically at using DigitalOcean with laravel, deployment, composer, etc etc etc.

 </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-04 20:25:05 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> And playing 64 player battle of Britain is still amazing!  </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-01 16:07:39 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Typhoon flying very low! </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-01 14:50:38 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> $199 per site? That's pretty damn steep imo </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-04-01 10:18:14 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Looks like some fun, but that's not texas holdem and not really 5 card poker if you can't throw cards.. </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-03-31 14:45:53 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Your SSL certificate is broken mate </TEXT>
</WRITING>
<WRITING>
	<TITLE>   </TITLE>
	<DATE> 2016-03-23 11:48:32 </DATE>
	<INFO> reddit post </INFO>
	<TEXT> Pub </TEXT>
</WRITING>
</INDIVIDUAL>
